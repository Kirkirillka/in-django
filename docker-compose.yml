version: "3.0"
services:
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=django
      - POSTGRES_DB=InDjango
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    ports:
    - 5432:5432

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379

  rabbitmq:
    image: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

  django_app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRESQL_DB_HOST=postgres
      - POSTGRESQL_DB_NAME=InDjango
      - POSTGRESQL_DB_USER_NAME=django
      - POSTGRESQL_DB_USER_PASS=django
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_CACHE_URL=redis://redis:6379/1
    restart: on-failure
    ports:
      - 8081:8000
      - 5001:5000
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - django_celery_worker
    entrypoint: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:5000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.django.rule=Host(`django.local`)
      - traefik.http.routers.django.tls=true
      - traefik.http.routers.django.service=django-service
      - traefik.http.services.django-service.loadbalancer.server.port=5000

  django_celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    restart: always
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - rabbitmq
    entrypoint: "celery -A InDjango worker --beat --loglevel INFO"

  traefik:
    image: "traefik:v2.4"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - django_app



volumes:
  db: